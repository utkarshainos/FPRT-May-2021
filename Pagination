The response from the API can be in XML of JSON format. Nowadays the data in mostly server in JSON format. The response can contain a list of items to be rendered in the frontend. Suppose the amount of data on the server is much larger than in size and count. This increases the response times of the api and increases network consumption on client side. Moreover the client machine can get overwhelemed with so much big response.

To solve this issue a technique called pagination is used. In this technique the data is sliced down into smaller chunks and is served as one chunk at a time. The response consists of further information or meta data, containing the next, prev, page no. etc. This information can be further used to determine the current page being served, the next page to be fetched or rendered and the previous page. This all boils down to make a fast and responsive api which in turn results in increased user experience on frontend and also reduces unneccessary network consumption.
